  # 该脚本，会等待广告结束后提示【Successfully added 90 minutes to server timer】，一直等不到会报错。

name: Add Godlike Server Time

on:
  # 允许在 Actions 页面手动触发此工作流，方便测试
  workflow_dispatch:

  schedule:
    # 【【【 核心修改点在这里 】】】
    # 使用两个 cron 表达式来组合实现“每90分钟”运行一次。
    # 所有时间均为 UTC 时间。
    # 第一个表达式：在 0, 3, 6, 9, 12, 15, 18, 21 点的第0分钟运行。
    - cron: '0 0,3,6,9,12,15,18,21 * * *'
    # 第二个表达式：在 1, 4, 7, 10, 13, 16, 19, 22 点的第30分钟运行。
    - cron: '30 1,4,7,10,13,16,19,22 * * *'

jobs:
  add_time_job:
    runs-on: ubuntu-latest
    
    # 由于脚本现在是单次运行，不再需要长时间的 timeout
    # 设置一个合理的超时，例如10分钟，防止意外卡死
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Playwright and dependencies
        run: |
          pip install playwright
          playwright install --with-deps chromium

      - name: Run Time Adder Script
        env:
          PTERODACTYL_COOKIE: ${{ secrets.PTERODACTYL_COOKIE }}
          PTERODACTYL_EMAIL: ${{ secrets.PTERODACTYL_EMAIL }}
          PTERODACTYL_PASSWORD: ${{ secrets.PTERODACTYL_PASSWORD }}
        # 使用 -u 参数禁用输出缓冲，确保日志实时显示
        run: python -u main.py

      - name: Upload error artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: error-screenshots
          path: "*.png"
